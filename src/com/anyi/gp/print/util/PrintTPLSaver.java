/* Generated by Together */
/* $Id: PrintTPLSaver.java,v 1.2 2008/03/25 06:58:36 liuxiaoyong Exp $ */

package com.anyi.gp.print.util;

/**
 * 打印过程中保存.jasper文件
 * <p>
 * Title: PrintTPLSaver
 * </p>
 * <p>
 * Description: 负责保存.jasper文件
 * </p>
 * <p>
 * Copyright: Copyright (c) 2004
 * </p>
 * <p>
 * Company: UFGOV
 * </p>
 *
 * @author leejianwei
 * @version 1.0
 */

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;

import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.util.JRSaver;
import net.sf.jasperreports.engine.xml.JRXmlWriter;

import org.apache.log4j.Logger;

import com.anyi.gp.print.exception.PrintingException;

public class PrintTPLSaver{
  private static Logger log = Logger.getLogger(PrintTPLSaver.class);

  /**
   * 根据指定的文件名将文件保存到指定位置
   *
   * @param template
   *          JasperReport
   * @param fileName
   *          String 文件名
   * @throws JRException
   */
  public static void saveTemplate(JasperReport template, String fileName) throws
      JRException{

    JRSaver.saveObject(template,
                       PrintFileUtil.getJasperReportPath() + fileName + ".jasper");
  }

  /**
   * 根据指定的文件将文件保存到指定位置
   *
   * @param template
   *          JasperReport
   * @param fileName
   *          String 文件名
   * @throws JRException
   */
  public static void saveTemplate(JasperReport template, File f) throws JRException{
    JRSaver.saveObject(template, f);
  }

  /**
   * 输出JasperDesign XML格式模板对象文件
   *
   * @param desing
   *          JasperDesign XML格式模板对象
   * @return JasperDesign XML格式模板对象文件
   */
  public static String JDesignWriterXml(JasperDesign design) throws
      PrintingException{
    String result = null;
    try{
      result = JRXmlWriter.writeReport(design, "gb2312");
    } catch(Exception e){
      log.error("PrintCompiler类JDesignWriterXml方法中编译模板出错,  JRException="
                + e.toString());
      throw new PrintingException("PrintCompiler类JDesignWriterXml方法中编译模板出错"
                                  + e.toString());
    }
    return result;
  }

  /**
   * 输出JasperDesign XML格式模板对象文件
   *
   * @param desing
   *          JasperDesign XML格式模板对象
   * @filename desing JasperDesign XML格式模板文件名
   */
  public static void JDesignWriterXml(JasperDesign design, String filename) throws
      PrintingException{
    String result = null;
    try{
      result = JRXmlWriter.writeReport(design, "gb2312");
    } catch(Exception e){
      log.error("PrintCompiler类JDesignWriterXml方法中编译模板出错,  JRException="
                + e.toString());
      throw new PrintingException("PrintCompiler类JDesignWriterXml方法中编译模板出错"
                                  + e.toString());
    }
    if(filename != null){
      String filenames = "";
      if(filename.endsWith(".xml")){
        filenames = PrintFileUtil.getJasperReportPath() + filename;
      } else{
        filenames = PrintFileUtil.getJasperReportPath() + filename + ".xml";
      }
      try{
        File createFile = new File(filenames);
        if(!createFile.exists()){
          createFile.createNewFile();
        }
        PrintWriter tempPW = new PrintWriter(new FileWriter(filenames), true);
        tempPW.println(result);
        tempPW.close();
      } catch(IOException ex){
        log.error("PrintCompiler类JDesignWriterXml(JasperDesign design, String filename)方法中生成模板文件出错,  JRException="
                  + ex.toString());
        throw new PrintingException(
            "PrintCompiler类JDesignWriterXml(JasperDesign design, String filename)方法中生成模板文件出错,"
            + ex.toString());

      }
    }
  }

}
